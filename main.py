import secrets
import random
import string
alphabet = string.ascii_letters
import ctypes
import sys
import os
import json





def cls():
    os.system("cls")
    
lololololol=''.join(secrets.choice(alphabet) for i in range(160, 320))
randlist = ["request", "socket", "CMD", "EXEC", "exec", "goto", "System.out.print(x)", "for int", "secrets", "join", "choice", "str", "int", "bool", "float", "var", lololololol, "print", ":", "sys.exit", "public class", "int num"]

ctypes.windll.kernel32.SetConsoleTitleW("Junk code gen | devloped by boboMbobo")



def rmathfunc():
    xstr=''.join(secrets.choice(alphabet) for i in range(16,32))
    ystr=''.join(secrets.choice(alphabet) for i in range(16,32))
    astr=''.join(secrets.choice(alphabet) for i in range(16,32))
    bstr=''.join(secrets.choice(alphabet) for i in range(16,32))
    cstr=''.join(secrets.choice(alphabet) for i in range(16,32))
    dstr=''.join(secrets.choice(alphabet) for i in range(16,32))
    estr=''.join(secrets.choice(alphabet) for i in range(16,32))
    gstr=''.join(secrets.choice(alphabet) for i in range(16,32))
    rstr=''.join(secrets.choice(alphabet) for i in range(16,32))
    qstr=''.join(secrets.choice(alphabet) for i in range(16,32))
    kstr=''.join(secrets.choice(alphabet) for i in range(16,32))
    vstr=''.join(secrets.choice(alphabet) for i in range(16,32))
    stringf=''.join(secrets.choice(alphabet) for i in range(16,32))
    numb=''.join(secrets.choice(alphabet) for i in range(16,32))
    randreplace = random.choice(randlist)
    randreplac2 = random.choice(randlist)

    
    coding=("""
xstr=("xstr")
ystr=("ystr")
astr=("astr")
bstr=("bstr")
cstr=("cstr")
dstr=("dstr")
estr=("estr")
gstr=("gstr")
rstr=("rstr")
qstr=("qstr")
kstr=("kstr")
vstr=("vstr")
stringf=("stringf")
numb=("numb")

if xstr!=ystr:
    astr=("bstr")+("cstr")
    dstr=("dstrs")+("randreplace")
    estr=numb
else:
    gstr=("dstrs")+("cstr")
    kstr=("qstr")+("rstr")+("randreplac2")
    vstr=numb2
def stringf(astr, dstr):
    dstr=("astr")+("estr")
    if dstr!=estr:
        estrs=("dstr")
    else:
        ("randreplace")
    """)

    replace1 = coding.replace("xstr", xstr)
    replace2 = replace1.replace("ystr", ystr)
    replace3 = replace2.replace("astr", astr)
    replace4 = replace3.replace("bstr", bstr)
    replace5 = replace4.replace("cstr", cstr)
    replace6 = replace5.replace("dstr", dstr)
    replace7 = replace6.replace("estr", estr)
    replace8 = replace7.replace("rstr", rstr)
    replace9 = replace8.replace("qstr", qstr)
    replace10 = replace9.replace("kstr", kstr)
    replace11 = replace10.replace("vstr", vstr)
    replace12 = replace11.replace("stringf", stringf)
    replace13 = replace12.replace("numb", numb)
    replace14 = replace13.replace("gstr", gstr)
    replace15 = replace14.replace("randreplace", randreplace)
    replace16 = replace15.replace("randreplac2", randreplac2)
    replace17 = replace16+("\n#generated by junk code gen by https://github.com/bobombobo")
    
    return(replace16)

def netw2func():
    import requests
    import random
    import string
    
    letters = (string.ascii_lowercase + string.ascii_uppercase)
    randstr = ''.join(random.choice(letters) for i in range(16, 32))
    uwilahgieu= ''.join(random.choice(letters) for i in range(16, 32))
    iuawhglkj= ''.join(random.choice(letters) for i in range(16, 32))
    quirty = ''.join(random.choice(letters) for i in range(16, 32))
    aauwigkj = ''.join(random.choice(letters) for i in range(16, 32))
    aoiuwegshjalk= ''.join(random.choice(letters) for i in range(16, 32))
    awiosehgjajio=''.join(random.choice(letters) for i in range(16, 32))
    zxcv=''.join(random.choice(letters) for i in range(16, 32))
    #abneiaobeij=''.join(random.choice(letters) for i in range(16, 32))
    awiosehgjajio=''.join(random.choice(letters) for i in range(16, 32))
    a200_code_uibhjqkb3w=''.join(random.choice(letters) for i in range(16, 32))
    a404_code_uhiwpaeugbn=''.join(random.choice(letters) for i in range(16, 32))
    a500_code_unuignipu=''.join(random.choice(letters) for i in range(16, 32))
    a403_code_pidbngwaiunb=''.join(random.choice(letters) for i in range(16, 32))
    anull_code_bnopuinq=("null")


    domain_list=[".com", ".net", ".xyz", ".org", ".tech", ".space", ".online", ".store", ".site", ".ru", ".jp", ".ca"]

    uwknel=random.choice(domain_list)

    #''.join(random.choice(letters) for i in range(16, 32))


    code=("""
awiosehgjajio=("awiosehgjajio")
abneiaobeij=[]
zuibweohbgp=[]
a200_code_uibhjqkb3w=(200)
a404_code_uhiwpaeugbn=(404)
a500_code_unuignipu=(500)
a403_code_pidbngwaiunb=(403)
anull_code_bnopuinq=("null")

randstr=("uwilahgieu")
url_iuawhglkj=("https://" + randstr + "uwknel")
def quirty():
    aauwigkj=(url_iuawhglkj + "/" + awiosehgjajio)
    abneiaobeij.append(aauwigkj)
try:    
    zxcv = requests.get(url_iuawhglkj)
except:
    zxcv=("anull_code_bnopuinq")
if zxcv == a200_code_uibhjqkb3w:
    zxcv = url_iuawhglkj
    zuibweohbgp.append(zxcv)
    pass
elif zxcv==500:
    zxcv=url_iuawhglkj
    zuibweohbgp.append(zxcv)
    pass
elif zxcv==a403_code_pidbngwaiunb:
    zxcv=url_iuawhglkj
    zuibweohbgp.append(zxcv)
    pass
elif zxcv==a404_code_uhiwpaeugbn:
    zxcv=url_iuawhglkj
    zuibweohbgp.append(zxcv)
elif zxcv !=anull_code_bnopuinq:
    zxcv=url_iuawhglkj
    zuibweohbgp.append(zxcv)
else:
    quirty()
    zxcv=zxcv
    pass

    """)

    r1=code.replace("randstr", randstr)
    r2=r1.replace("uwilahgieu", uwilahgieu)
    r3=r2.replace("iuawhglkj", iuawhglkj)
    r4=r3.replace("quirty", quirty)
    r5=r4.replace("aauwigkj", aauwigkj)
    r6=r5.replace("aoiuwegshjalk", aoiuwegshjalk)
    r7=r6.replace("awiosehgjajio", awiosehgjajio)
    r8=r6.replace("zxcv", zxcv)
    #r9=r8.replace("abneiaobeij", abneiaobeij)
    r10=r8.replace("uwknel", uwknel)
    r11=r10.replace("awiosehgjajio", awiosehgjajio)
    r12=r11.replace("a200_code_uibhjqkb3w", a200_code_uibhjqkb3w)
    r13=r12.replace("a404_code_uhiwpaeugbn", a404_code_uhiwpaeugbn)
    r14=r13.replace("a500_code_unuignipu", a500_code_unuignipu)
    r15=r14.replace("a403_code_pidbngwaiunb", a403_code_pidbngwaiunb)
    r16=r15.replace("anull_code_bnopuinq", anull_code_bnopuinq)

    return(r16)

def unicode3func():
    import random
    import socket
    from time import sleep
    import time

    #generation of unicode characters may cuase lag and requires multiple retries to generate due to some characters not allowed to start a string.

    #hostname = socket.gethostname()
    #ip_compare_change = socket.gethostbyname(hostname)
    #print(ip_compare_change)

    trycount=0
    while True:
        changethis=('')
        for i in range(10):
          #print(''.join(chr(random.randrange(161,646))))
          changethis=changethis+(chr(random.randrange(161,646)))
        
        otherchange=('')
        for i in range(10):
          #print(''.join(chr(random.randrange(161,646))))
          otherchange=otherchange+(chr(random.randrange(161,646)))

        changeth1s2=('')
        for i in range(10):
          #print(''.join(chr(random.randrange(161,646))))
          changeth1s2=changeth1s2+(chr(random.randrange(161,646)))

        changevar=('')
        for i in range(10):
          #print(''.join(chr(random.randrange(161,646))))
          changevar=changevar+(chr(random.randrange(161,646)))

        ip_compare_change=('')
        for i in range(10):
          #print(''.join(chr(random.randrange(161,646))))
          ip_compare_change=ip_compare_change+(chr(random.randrange(161,646)))

        newrandstr=('')
        for i in range(10):
          #print(''.join(chr(random.randrange(161,646))))
          newrandstr=newrandstr+(chr(random.randrange(161,646)))
        
        
        code=("""
import socket
import random

changethis=("192.168.0.1")
changeth1s2=("192.168.1.1")

changevar = socket.gethostname()
ip_compare_change = socket.gethostbyname(changevar)
#print(ip_compare_change)
#print(changethis)

if ("changethis")!=("otherchange"):
  otherchange=("changethis")+("otherchange")
else:
  otherchange=("newrandstr")

if ip_compare_change==changethis or changeth1s2:
  ip_compare_change=(changethis+changeth1s2)
else:
  ip_compare_change=(changethis+changeth1s2)
        """)
        
        r1=code.replace("changethis", changethis)
        r2=r1.replace("otherchange", otherchange)
        r3=r2.replace("changeth1s2", changeth1s2)
        r4=r3.replace("changevar", changevar)
        r5=r4.replace("ip_compare_change", ip_compare_change)
        r6=r5.replace("newrandstr", newrandstr)
        
        try:
            exec(r6)
            
            return(r6)
        except:
            #print("\033[A                             \033[A")
            #print("hello", end="\r\r")
            #print ("\r")
            print("#retry count: " + str(trycount), end="\r")

            trycount=trycount+1
            sleep(.05)
            
            










LogoText = ("""
       _             _                       _                            
      | |           | |                     | |                           
      | |_   _ _ __ | | __      ___ ___   __| | ___       __ _  ___ _ __    |  Coded by boboMbobo
  _   | | | | | '_ \| |/ /     / __/ _ \ / _` |/ _ \     / _` |/ _ \ '_ \   |  https://discord.gg/vJxRgaX2wz | https://github.com/bobombobo
 | |__| | |_| | | | |   <     | (_| (_) | (_| |  __/    | (_| |  __/ | | |  |  Used to generate python script with no function
  \____/ \__,_|_| |_|_|\_\     \___\___/ \__,_|\___|     \__, |\___|_| |_|  |  
                                                          __/ |             |  Version: 1.4 (successor to v0.0.3)
""")
MainMenuText=("""
[1] Basic math/text generation
[2] Network functions(network scheming protocalls ect...)
[3] Unicode generation [python 3+ only]
""")

                                 

menu_choice = 0
while True:
    cls()
    print(LogoText)
    print(MainMenuText)
    menu_choice = str(input("-->>"))
    if menu_choice==("1"):
        startstr = ""
        crt = 0
        recurtions = int(input("Times to run: "))
        fileout = str(input("Output file: "))
        while crt<recurtions:
            startstr = str(rmathfunc())+"\n"+startstr
            crt=crt+1

        with open(fileout, "w+", encoding="utf-8") as file:
            file.write(startstr)
        print("succesfully generated " + str(recurtions) + " times!")
        print("Output placed at: " + fileout)

    if menu_choice==("2"):
        startstr = ""
        crt = 0
        recurtions = int(input("Times to run: "))
        fileout = str(input("Output file: "))
        while crt<recurtions:
            startstr = str(netw2func())+"\n"+startstr
            crt=crt+1

        with open(fileout, "w+", encoding="utf-8") as file:
            file.write(startstr)
        print("succesfully generated " + str(recurtions) + " times!")
        print("Output placed at: " + fileout)
        
    if menu_choice==("3"):
        startstr = ""
        crt = 0
        recurtions = int(input("Times to run: "))
        fileout = str(input("Output file: "))
        while crt<recurtions:
            startstr = str(unicode3func())+"\n"+startstr
            crt=crt+1

        with open(fileout, "w+", encoding="utf-8") as file:
            file.write(startstr)
        print("succesfully generated " + str(recurtions) + " times!")
        print("Output placed at: " + fileout)

        
